class ToDoItem:
    def _init_(self, task, completed=False):
        self.task = task
        self.completed = completed

    def mark_complete(self):
        self.completed = True

    def _str_(self):
        status = 'Done' if self.completed else 'Not Done'
        return f"[{status}] {self.task}"


class ToDoList:
    def _init_(self):
        self.tasks = []

    def add_task(self, task):
        self.tasks.append(ToDoItem(task))

    def remove_task(self, index):
        if 0 <= index < len(self.tasks):
            self.tasks.pop(index)

    def complete_task(self, index):
        if 0 <= index < len(self.tasks):
            self.tasks[index].mark_complete()

    def show_tasks(self):
        if not self.tasks:
            print("No tasks in the to-do list.")
        for idx, task in enumerate(self.tasks):
            print(f"{idx + 1}. {task}")


def main():
    to_do_list = ToDoList()

    while True:
        print("\nTo-Do List Application")
        print("1. Add Task")
        print("2. Remove Task")
        print("3. Complete Task")
        print("4. Show Tasks")
        print("5. Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            task = input("Enter the task: ")
            to_do_list.add_task(task)
        elif choice == '2':
            index = int(input("Enter the task number to remove: ")) - 1
            to_do_list.remove_task(index)
        elif choice == '3':
            index = int(input("Enter the task number to complete: ")) - 1
            to_do_list.complete_task(index)
        elif choice == '4':
            to_do_list.show_tasks()
        elif choice == '5':
            print("Exiting the application.")
            break
        else:
            print("Invalid choice. Please try again.")


if __name__ == "_main_":
    main()


